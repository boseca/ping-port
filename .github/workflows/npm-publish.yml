# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: npm release

on:
  release:
    types: [published, edited]

jobs:
  check:
    name: Check version and tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get package version
        shell: bash
        id: package_version
        run: |
          ver=$(jq .version package.json | sed -e "s/^\"//" -e "s/\"//")
          echo "::set-output name=version::$ver"
      - name: Compare package version and release tag
        if: steps.package_version.outputs.version != github.event.release.tag_name
        env:
          TAG: "${{ github.event.release.tag_name }}"
          PKG_VER: ${{ steps.package_version.outputs.version }}
        run: |
          echo "Mismatch NPM version $PKG_VER and git tag $TAG"
          exit 1

  build:
    name: Lint and test
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run lint
      - run: npm test

  publish:
    name: Publish to NPM & GitHub Package Registry
    runs-on: ubuntu-latest
    needs: [check, build]
    steps:
      - uses: actions/checkout@v2
      - name: Get NPM package version using "npm info"
        shell: bash
        id: package_npm_ver
        run: |
          var=$(npm info tcp-ping-port | grep latest | awk -F': ' '{ print $2 }')
          echo "::set-output name=version::$var"

      - name: Check if package is already published to NPM
        if: steps.package_npm_ver.outputs.version == github.event.release.tag_name
        env:
          TAG: "${{ github.event.release.tag_name }}"
          PKG_VER: ${{ steps.package_npm_ver.outputs.version }}
        run: |
          echo "NPM Package version $PKG_VER with git tag $TAG is already published to NPM"

      - name: Publish package to NPM - setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Publish package to NPM - publish
        if: steps.package_npm_ver.outputs.version != github.event.release.tag_name
        run: |
          npm ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish package to GPR - setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - name: Publish package to GPR - publish
        if: steps.package_npm_ver.outputs.version != github.event.release.tag_name
        run: |
          npm ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
